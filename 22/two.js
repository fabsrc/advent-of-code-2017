function virus (input) {
  const map = {}
  const rows = input.split('\n')
  const center = Math.floor(rows.length / 2)
  let [x, y] = [0, 0]
  let [dx, dy] = [-1, 0]
  let bursts = 10000000
  let count = 0

  rows.forEach((row, ridx) => {
    map[ridx - center] = {}
    row.split('').forEach((node, cidx) => {
      map[ridx - center][cidx - center] = node
    })
  })

  while (bursts--) {
    map[x] = map[x] || {}

    if (map[x][y] === '#') {
      if (dx === 1) {
        [dx, dy] = [0, -1]
      } else if (dx === -1) {
        [dx, dy] = [0, 1]
      } else if (dy === 1) {
        [dx, dy] = [1, 0]
      } else if (dy === -1) {
        [dx, dy] = [-1, 0]
      }

      map[x][y] = 'F'
    } else if (map[x][y] === 'F') {
      if (dx === 1) {
        [dx, dy] = [-1, 0]
      } else if (dx === -1) {
        [dx, dy] = [1, 0]
      } else if (dy === 1) {
        [dx, dy] = [0, -1]
      } else if (dy === -1) {
        [dx, dy] = [0, 1]
      }

      map[x][y] = '.'
    } else if (map[x][y] === 'W') {
      map[x][y] = '#'
      count++
    } else {
      if (dx === 1) {
        [dx, dy] = [0, 1]
      } else if (dx === -1) {
        [dx, dy] = [0, -1]
      } else if (dy === 1) {
        [dx, dy] = [-1, 0]
      } else if (dy === -1) {
        [dx, dy] = [1, 0]
      }

      map[x][y] = 'W'
    }

    x += dx
    y += dy
  }

  return count
}

console.assert(virus(
`..#
#..
...`
) === 2511944)
console.log(virus(
`##.###.....##..#.####....
##...#.#.#..##.#....#.#..
...#..#.###.#.###.##.####
..##..###....#.##.#..##.#
###....#####..###.#..#..#
.....#.#...#..##..#.##...
.##.#.###.#.#...##.#.##.#
......######.###......###
#.....##.#....#...#......
....#..###.#.#.####.##.#.
.#.#.##...###.######.####
####......#...#...#..#.#.
###.##.##..##....#..##.#.
..#.###.##..#...#######..
...####.#...###..#..###.#
..#.#.......#.####.#.....
..##..####.######..##.###
..#..#..##...#.####....#.
.#..#.####.#..##..#..##..
......#####...#.##.#....#
###..#...#.#...#.#..#.#.#
.#.###.#....##..######.##
##.######.....##.#.#.#..#
..#..##.##..#.#..###.##..
#.##.##..##.#.###.......#`
))
